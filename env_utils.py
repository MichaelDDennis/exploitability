from ray.tune.registry import register_env
from ray.rllib.env.multi_agent_env import MultiAgentEnv
from ray.rllib.tests.test_multi_agent_env import MultiCartpole


import gym
from gym.spaces import Discrete


from tictactoe_wrapper import MultiAgentTicTacToe

ROCK = 0
PAPER = 1
SCISSORS = 2


class RockPaperScissorsEnv(MultiAgentEnv):
    """Two-player environment for rock paper scissors.

    The observation is simply the last opponent action."""

    def __init__(self, _):
        self.action_space = Discrete(3)
        self.observation_space = Discrete(3)
        self.player1 = 0
        self.player2 = 1
        self.last_move = None
        self.num_moves = 0

    def reset(self):
        self.last_move = (0, 0)
        self.num_moves = 0
        return {
            self.player1: self.last_move[1],
            self.player2: self.last_move[0],
        }

    def step(self, action_dict):
        move1 = action_dict[self.player1]
        move2 = action_dict[self.player2]
        self.last_move = (move1, move2)
        obs = {
            self.player1: self.last_move[1],
            self.player2: self.last_move[0],
        }
        r1, r2 = {
            (ROCK, ROCK): (0, 0),
            (ROCK, PAPER): (-1, 1),
            (ROCK, SCISSORS): (1, -1),
            (PAPER, ROCK): (1, -1),
            (PAPER, PAPER): (0, 0),
            (PAPER, SCISSORS): (-1, 1),
            (SCISSORS, ROCK): (-1, 1),
            (SCISSORS, PAPER): (1, -1),
            (SCISSORS, SCISSORS): (0, 0),
        }[move1, move2]
        rew = {
            self.player1: r1,
            self.player2: r2,
        }
        self.num_moves += 1
        done = {
            "__all__": self.num_moves >= 10,
        }
        return obs, rew, done, {}


def make_cartpol():
    # Simple environment with 4 independent cartpole entities
    register_env("multi_cartpole", lambda _: MultiCartpole(4))
    single_env = gym.make("CartPole-v0")
    obs_space = single_env.observation_space
    act_space = single_env.action_space

    return obs_space, act_space, "multi_cartpole"


def make_rps():
    single_env = RockPaperScissorsEnv("")
    register_env("rps", lambda _: RockPaperScissorsEnv(""))
    obs_space = single_env.observation_space
    act_space = single_env.action_space

    return obs_space, act_space, "rps"


def make_tictactoe():
    single_env = MultiAgentTicTacToe()
    register_env("tictactoe-v0", lambda _: MultiAgentTicTacToe())
    obs_space = single_env.observation_space
    act_space = single_env.action_space

    return obs_space, act_space, "tictactoe-v0"


def get_env(env):
    return {"cartpole": make_cartpol, "rps": make_rps, "tictactoe-v0": make_tictactoe}[env]()
